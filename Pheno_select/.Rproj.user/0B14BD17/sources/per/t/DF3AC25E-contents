# Find phenotypes with keyword search
# require(stringr)
# require(stringr)
# require(cowplot)
# require(reshape2)
# require(scales)
# require(ggplot2)
phenotype_to_genes = read.delim("data/phenotype_to_genes.txt", skip = 1, header=FALSE)
colnames(phenotype_to_genes) = c("ID", "Phenotype", "EntrezID", "Gene",
                        "Additional", "Source", "LinkID")
load("data/Descartes_All_Results.rda")
 
 process_search_terms <- function(keywords) {
  keywords <- strsplit(keywords, ",")[[1]]
  output = c()
  for (i in seq(1, length(keywords))){
    cur = keywords[i]
    while (substr(cur, 1,1) == " ") {
      cur = substr(cur, 2, nchar(cur))
    }
    while (substr(cur, nchar(cur), nchar(cur)) == " ") {
      cur = substr(cur, 1, nchar(cur)-1)
    }
    output = append(output, paste0("(?i)", cur))
  }
  output <- paste(output, collapse = "|")
  return(output)
}



keyword_search_df <- function(Terms, q_threshold = 0.05,fold_threshold = 1,
                              min_sd_from_mean = 0) {

  # remove as charcater below ?
  Phenos <- as.character(unique(phenotype_to_genes$Phenotype[str_detect(phenotype_to_genes$Phenotype, pattern = Terms)]))
  DF <- all_results_merged[all_results_merged$list %in% Phenos &
                       all_results_merged$q < q_threshold & all_results_merged$fold_change > fold_threshold &
                       all_results_merged$sd_from_mean > min_sd_from_mean, ]
  return(DF)
}

plot_phenotype_counts <- function(DF, keywords) {
  plot <- ggplot(DF, aes(x = CellType)) + geom_bar(mapping=aes(fill=fold_change)) + theme_cowplot() +
    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size = 10)) +
    ggtitle(paste0("Phenotype enrichment counts associated with:\n",keywords)) +
    labs(x = "Cell type", y = "Enrichment count") +
    scale_y_continuous(breaks = pretty_breaks(), expand = expansion(mult = c(0, .1))) +
    #theme(legend.position = "top", legend.key.size = unit(0.25, "cm"),
    #      legend.text = element_text(size = 10), 
    #      legend.title = element_blank(),
    #      title = element_text(size = 12))+
    scale_fill_continuous(name = "Fold Change")
  return (plot)
  }
